(component
	(type $fs-types
		(instance
			(export $0 "descriptor" (type (sub resource)))
			(type $1 u64)
			(export $2 "filesize" (type (eq 1)))
			(alias outer 1 10 (type $3))
			(export $4 "output-stream" (type (eq 3)))
			(type $5 (enum "access" "would-block" "already" "bad-descriptor" "busy" "deadlock" "quota" "exist" "file-too-large" "illegal-byte-sequence" "in-progress" "interrupted" "invalid" "io" "is-directory" "loop" "too-many-links" "message-size" "name-too-long" "no-device" "no-entry" "no-lock" "insufficient-memory" "insufficient-space" "not-directory" "not-empty" "not-recoverable" "unsupported" "no-tty" "no-such-device" "overflow" "not-permitted" "pipe" "read-only" "invalid-seek" "text-file-busy" "cross-device"))
			(export $6 "error-code" (type (eq 5)))
			(type $7 (enum "unknown" "block-device" "character-device" "directory" "fifo" "symbolic-link" "regular-file" "socket"))
			(export $8 "descriptor-type" (type (eq 7)))
			(type $9 u64)
			(export $10 "link-count" (type (eq 9)))
			(alias outer 1 11 (type $11))
			(export $12 "datetime" (type (eq 11)))
			(type $13 (option 12))
			(type $14 (record (field "type" 8) (field "link-count" 10) (field "size" 2) (field "data-access-timestamp" 13) (field "data-modification-timestamp" 13) (field "status-change-timestamp" 13)))
			(export $15 "descriptor-stat" (type (eq 14)))
			(alias outer 1 12 (type $16))
			(export $17 "error" (type (eq 16)))
			(type $18 (borrow 0))
			(type $19 (own 4))
			(type $20 (result 19 (error 6)))
			(type $21 (func (param "self" 18) (param "offset" 2) (result 20)))
			(export $0 "[method]descriptor.write-via-stream" (func (type $21)))
			(type $22 (func (param "self" 18) (result 20)))
			(export $1 "[method]descriptor.append-via-stream" (func (type $22)))
			(type $23 (result 8 (error 6)))
			(type $24 (func (param "self" 18) (result 23)))
			(export $2 "[method]descriptor.get-type" (func (type $24)))
			(type $25 (result 15 (error 6)))
			(type $26 (func (param "self" 18) (result 25)))
			(export $3 "[method]descriptor.stat" (func (type $26)))
			(type $27 (borrow 17))
			(type $28 (option 6))
			(type $29 (func (param "err" 27) (result 28)))
			(export $4 "filesystem-error-code" (func (type $29)))
		)
	)
	(import "wasi:filesystem/types@0.2.0" (instance $Fs-types (type $fs-types)))
)